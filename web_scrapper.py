# -*- coding: utf-8 -*-
"""Web Scrapper.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DLwexpdXei2rB4Cfe_mv4vWFmMOg1JZa
"""

!pip install langdetect

import numpy

import requests
import json
from bs4 import BeautifulSoup
import pandas as pd
from csv import DictWriter
from langdetect import detect

b=1947802

url2= 'https://www.rokomari.com/book/{}/'.format(b)

response2 = requests.get(url2)

print(response2.status_code)

soup = BeautifulSoup(response2.text, 'html.parser')

#print(soup.prettify())

data = soup.find('h1')
data

category = soup.find('a', class_ = 'ml-2')
category = category.text.strip()

unwanted = data.find('span')
unwanted
try:
  unwanted.extract()
except:
  print('Not Possible')

book_name = data.text.strip()
print(book_name)

data2 = soup.find('p' , class_ = 'author-name')
print(data2)

author = data2.find('a').text.strip()
author

url = "https://www.rokomari.com/productreviews/{}/2000".format(b)

response = requests.get(url)

print(response.status_code)

decode = response.json()

def sentiment_string(sentiment):
  if sentiment == 1:
    return "Positive"
  elif sentiment == 2:
    return "Negative"
  elif sentiment == 3:
    return "Neutral"
  elif sentiment == 4:
    return "Unnecessary"
  else:
    raise ValueError("Invalid sentiment value: {}".format(sentiment))

cnt =0
for i in decode:
  try:
    a = detect(i['reviewDetail'])
    if a=='bn':
      print(i['reviewDetail'])
      number_str = input("1=Positive 2=Negative 3=Neutral 4=Unnessesary: ")
      sen = int(number_str)
      sentiment= sentiment_string(sen)
      review= {
        'Category': category,
        'Book_Name': book_name,
        'Author_Name': author,
        'Review':i['reviewDetail'],
        'Sentiment': sentiment
      }
      # cnt+=1
      # print(cnt)
      # print(i['reviewDetail'])
      field_names = ['Category','Book_Name', 'Author_Name', 'Review','Sentiment']
      with open('dataset.csv', 'a') as f_object:
        dictwriter_object = DictWriter(f_object, fieldnames=field_names)
        dictwriter_object.writerow(review)
        f_object.close()
  except:
    continue

# review = [{
#       'Category': category,
#       'Book_Name': book_name,
#       'Author_Name': author,
#       'Review':decode[0]['reviewDetail'],
#       'Sentiment': 0,
# }]
# df = pd.DataFrame(review)
# df.to_csv('dataset.csv', index=False, header=True)

df = pd.read_csv('dataset.csv')
print(len(df))
# df_empty = df.head(0)
# print(df_empty)
# df_empty.to_csv('dataset.csv', index=False, header=True)

